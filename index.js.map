{"version":3,"file":"index.js","sources":["../src/js/fetchEvents.js","../src/templates/card.js","../src/js/baseMarkUp.js"],"sourcesContent":["export default class EventsApiService {\n  #API_KEY = '3vLlhLsn5MSlQI96Cy78HBPNhef1xnsS';\n  #API_URL = 'https://app.ticketmaster.com/discovery/v2/events.json';\n\n  constructor() {\n    this.page = 0;\n    this.pageSize = 12;\n  }\n\n  async fetchEvents() {\n    const searchParams = new URLSearchParams({\n      apikey: this.#API_KEY,\n      page: this.page,\n      size: this.pageSize,\n    });\n    const url = `${this.#API_URL}?${searchParams}&classificationName=music`;\n\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch events');\n    }\n\n    return response.json();\n  }\n}\n\n// fetch('https://app.ticketmaster.com/discovery/v2/events.json?apikey=3vLlhLsn5MSlQI96Cy78HBPNhef1xnsS')\n","export default function cardMarkUp(events) {\n  const markUp = events.map(event => {\n    const imgUrl = event.images[0]?.url || '';\n    const artist = event.name || 'No name available';\n    const date = event.dates.start.localDate || 'Unknown date';\n    const location = event._embedded?.venues[0].name || 'Unknown location';\n    const eventUrl = event.url || '#';\n\n    return `\n        <li class=\"cards__item\">\n                <img src=\"${imgUrl}\" alt=\"${artist}\" class=\"cards__item__img\">\n                <h2 class=\"cards__item__title\">\n                    ${artist}\n                </h2>\n                <p class=\"cards__item__date\">${date}</p>\n                <a href=\"${eventUrl}\" class=\"cards__item__location__link\">\n                    <svg class=\"location__item__icon\">\n                        <use href=\"/img/icons/sprite.svg#icon-location\"> </use>\n                    </svg>\n\n                   ${location} </a>\n            </li>\n      `;\n  });\n\n  return markUp.join('');\n}\n","import EventsApiService from './fetchEvents';\nimport cardMarkUp from '../templates/card';\n// import { createLogger } from 'vite';\n\nconst list = document.querySelector('.cards__list');\n\nconst eventsApiService = new EventsApiService();\nrenderEvents();\nexport default async function renderEvents() {\n  try {\n    const data = await eventsApiService.fetchEvents();\n\n    const events = data._embedded?.events || '';\n    const markUp = cardMarkUp(events);\n\n    list.insertAdjacentHTML('beforeend', markUp);\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["EventsApiService","__privateAdd","_API_KEY","_API_URL","searchParams","__privateGet","url","response","cardMarkUp","events","event","imgUrl","_a","artist","date","location","_b","eventUrl","list","eventsApiService","renderEvents","markUp","error"],"mappings":"+8BAAe,MAAMA,CAAiB,CAIpC,aAAc,CAHdC,EAAA,KAAAC,EAAW,oCACXD,EAAA,KAAAE,EAAW,yDAGT,KAAK,KAAO,EACZ,KAAK,SAAW,EACjB,CAED,MAAM,aAAc,CAClB,MAAMC,EAAe,IAAI,gBAAgB,CACvC,OAAQC,EAAA,KAAKH,GACb,KAAM,KAAK,KACX,KAAM,KAAK,QACjB,CAAK,EACKI,EAAM,GAAGD,EAAA,KAAKF,EAAQ,IAAIC,CAAY,4BAEtCG,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAG1C,OAAOA,EAAS,MACjB,CACH,CAxBEL,EAAA,YACAC,EAAA,YCFa,SAASK,EAAWC,EAAQ,CAyBzC,OAxBeA,EAAO,IAAIC,GAAS,SACjC,MAAMC,IAASC,EAAAF,EAAM,OAAO,CAAC,IAAd,YAAAE,EAAiB,MAAO,GACjCC,EAASH,EAAM,MAAQ,oBACvBI,EAAOJ,EAAM,MAAM,MAAM,WAAa,eACtCK,IAAWC,EAAAN,EAAM,YAAN,YAAAM,EAAiB,OAAO,GAAG,OAAQ,mBAC9CC,EAAWP,EAAM,KAAO,IAE9B,MAAO;AAAA;AAAA,4BAEiBC,CAAM,UAAUE,CAAM;AAAA;AAAA,sBAE5BA,CAAM;AAAA;AAAA,+CAEmBC,CAAI;AAAA,2BACxBG,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKdF,CAAQ;AAAA;AAAA,OAG7B,CAAG,EAEa,KAAK,EAAE,CACvB,CCtBA,MAAMG,EAAO,SAAS,cAAc,cAAc,EAE5CC,EAAmB,IAAInB,EAC7BoB,IACe,eAAeA,GAAe,OAC3C,GAAI,CAGF,MAAMX,IAASG,GAFF,MAAMO,EAAiB,eAEhB,YAAL,YAAAP,EAAgB,SAAU,GACnCS,EAASb,EAAWC,CAAM,EAEhCS,EAAK,mBAAmB,YAAaG,CAAM,CAC5C,OAAQC,EAAO,CACd,QAAQ,MAAMA,CAAK,CACpB,CACH"}